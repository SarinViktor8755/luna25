<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Валерия : возраст</title>
    <link rel="icon" type="image/x-icon" href="icons8.png">
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Dancing+Script:wght@700&family=Montserrat:wght@400;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Montserrat', Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #013d42;
            color: white;
            display: flex;
            flex-direction: column;
            align-items: center;
            overflow-x: hidden;
        }

		html {
  scroll-behavior: smooth;
}

        .unselectable {
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }
		
		:target {
    scroll-margin-top: 70px; /* Высота вашего меню */
}

        .container {
            max-width: 900px;
            margin: 0 auto;
            padding: 20px;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            text-align: left;
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
            z-index: 1;
            box-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.5); 
        }

        h1 {
            padding-top: 50px;
            padding-bottom: 30px;
            text-align: center;
            color: white;
            font-size: 3em;
            margin-bottom: 20px;
            font-family: 'Dancing Script', cursive;
            position: relative;
            display: inline-block;
        }

        .letter {
            display: inline-block;
            position: relative;
        }

        @keyframes snake {
            0%, 100% { transform: translateY(0) rotate(0deg); }
            25% { transform: translateY(-15px) rotate(5deg); }
            50% { transform: translateY(0) rotate(0deg); }
            75% { transform: translateY(15px) rotate(-5deg); }
        }

        .heart-bubble {
            position: fixed;
            font-size: 20px;
            pointer-events: none;
            animation: float-up 3s ease-out forwards;
            opacity: 0.8;
            z-index: 100;
        }

        @keyframes float-up {
            0% { 
                transform: translateY(0) scale(0.5);
                opacity: 0.8;
            }
            100% { 
                transform: translateY(-100px) scale(1.2);
                opacity: 0;
            }
        }

        @font-face {
            font-family: 'Kontrabanda';
            src: url('./fonts/ofont.ru_Kontrabanda.ttf') format('truetype');
        }
        
        .text_effect {
            font-family: 'Exo 2.0 Extra Bold Italic';
            color: rgb(247, 247, 247);
            font-size: 7.5vw;
            white-space: nowrap;
            text-shadow: rgb(3, 3, 3) 4px 4px 4px;
        }

        .info {
            margin-bottom: 20px;
            text-align: center;
            width: 100%;
        }

        .info p {
            margin: 10px 0;
            color: white;
            font-size: 1.2em;
            line-height: 1.6;
        }

        .slideshow-container {
            width: 100%;
            max-width: 350px;
            height: 350px;
            overflow: hidden;
            position: relative;
            border: 5px solid #ffffff;
            border-radius: 10px;
            background-color: rgba(255, 255, 255, 0.1);
            margin: 0 auto;
        }

        .slideshow {
            display: flex;
            width: 100%;
            height: 100%;
            position: relative;
        }

        .slideshow img {
            width: 100%;
            height: 100%;
            object-fit: contain;
            border-radius: 5px;
            position: absolute;
            top: 0;
            left: 0;
            opacity: 0;
            transition: opacity 1s ease-in-out;
        }

        .slideshow img.active {
            opacity: 1;
        }

        .sparkle {
            position: absolute;
            width: 10px;
            height: 10px;
            background-color: rgba(255, 255, 255, 0.8);
            border-radius: 50%;
            pointer-events: none;
            animation: sparkleFade 1s ease-out forwards;
        }

        @keyframes sparkleFade {
            0% { transform: scale(1); opacity: 1; }
            100% { transform: scale(2); opacity: 0; }
        }

        .highlight {
            color: #ffcc00;
            font-weight: bold;
        }

        .emoji {
            font-size: 1.5em;
            vertical-align: middle;
            margin-right: 5px;
        }

        .progressBarContainer {
            width: 100%;
            margin: 0 auto;
            height: 20px;
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 6px;
            overflow: hidden;
            margin-top: 10px;
            position: relative;
            max-width: 600px;
        }

        .progressBar {
            height: 100%;
            background-color: #ffcc00;
            width: 0%;
            border-radius: 10px;
            transition: width 0.5s ease-in-out;
        }

        .progressBarContainer.complete {
            background-color: rgba(0, 255, 0, 0.2);
        }

        .progressBarContainer.complete .progressBar {
            background-color: green;
        }

        .progressBarContainer.complete::after {
            content: '✔';
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            color: green;
            font-size: 1.2em;
        }
        
        /* Стили для вертикальной фотографии 720x1080 */
        .anniversary-row {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            width: 100%;
            gap: 20px;
            margin: 20px 0;
        }
        
        .anniversary-frame {
            position: relative;
            width: 360px;
            height: 540px;
            border: 10px solid;
            box-shadow: 0 0 20px rgba(255, 204, 0, 0.5);
            background-color: rgba(255, 255, 255, 0.1);
            display: flex;
            flex-direction: column;
            align-items: center;
            overflow: hidden;
            color: #d99cd4;
            cursor: pointer;
            transition: transform 0.3s ease;
        }
        
        .anniversary-frame:hover {
            transform: scale(1.02);
        }
        
        .anniversary-photo {
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: center;
            opacity: 0;
            transition: opacity 0.5s ease;
        }
        
        .anniversary-photo.loaded {
            opacity: 1;
        }
        
        .anniversary-text {
            position: absolute;
            bottom: 20px;
            left: 0;
            text-align: center;
            font-family: 'Kontrabanda', 'Dancing Script', cursive;
            font-size: 3rem;
            color: #ffffff;
            text-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
            background: linear-gradient(135deg, #ae11cb, #4b6289);
            padding: 4px;
            border-radius: 10px;
            margin: 0 20px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }
        
        /* Модальное окно для увеличенного просмотра */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.9);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s, visibility 0.3s;
        }
        
        .modal-overlay.active {
            opacity: 1;
            visibility: visible;
        }
        
        .modal-content {
            max-width: 90%;
            max-height: 90%;
            position: relative;
            background-color: #303030;
        }
        
        .modal-content img {
            max-width: 100%;
            max-height: 90vh;
            object-fit: contain;
        }
        
        .close-modal {
            position: absolute;
            top: 20px;
            right: 20px;
            color: white;
            font-size: 30px;
            cursor: pointer;
            background: rgba(0, 0, 0, 0.5);
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        @keyframes glow {
            from {
                text-shadow: 0 0 5px #ffcc00, 0 0 10px #ff6699;
            }
            to {
                text-shadow: 0 0 10px #ffcc00, 0 0 20px #ff6699, 0 0 30px #66ccff;
            }
        }
        
        /* Стили для разделителя */
        .section-divider {
            width: 100%;
            text-align: center;
            margin: 40px 0 20px;
            position: relative;
        }
        
        .section-divider::before,
        .section-divider::after {
            content: "";
            display: inline-block;
            width: 30%;
            height: 2px;
            background: linear-gradient(90deg, transparent, #ffcc00, transparent);
            position: absolute;
            top: 50%;
        }
        
        .section-divider::before {
            left: 0;
        }
        
        .section-divider::after {
            right: 0;
        }
        
        .section-title {
            display: inline-block;
            padding: 0 20px;
            background-color: #013d42;
            position: relative;
            z-index: 1;
            color: #ffcc00;
            font-family: 'Dancing Script', cursive;
            font-size: 2rem;
        }
        
        /* Адаптация для мобильных устройств */
        @media (max-width: 768px) {
            .anniversary-frame {
                width: 240px;
                height: 360px;
                border-width: 10px;
            }
            
            .anniversary-text {
                font-size: 2rem;
                bottom: 10px;
            }
            
            h1 {
                font-size: 2.5em;
            }
            
            .section-divider::before,
            .section-divider::after {
                width: 20%;
            }
            
            .section-title {
                font-size: 1.5rem;
            }
        }
        
        /* Placeholder для изображений */
        .placeholder {
            width: 100%;
            height: 100%;
            background: linear-gradient(45deg, #013d42 25%, #025a63 50%, #013d42 75%);
            background-size: 200% 200%;
            animation: placeholderShimmer 2s infinite;
        }
        
        @keyframes placeholderShimmer {
            0% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
    </style>
</head>
<body>
<nav class="navbar navbar-light fixed-top" style="background-color: #256f75; color: white; justify-content: center;">
  <a class="navbar-brand" href="#" style="color: white;">Оглавление</a>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarText" aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>
  <div class="collapse navbar-collapse" id="navbarText">
    <ul class="navbar-nav mr-auto" style="color: white;">
      <li class="nav-item active">
        <a class="nav-link" href="#age" style="color: white;">Возраст <span class="sr-only">(current)</span></a>
      </li>
      <li class="nav-item active">
        <a class="nav-link" href="#perv" style="color: white;">Предыстория </span></a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#gl1" style="color: white;">Глава 1</a>
      </li>
    </ul>
  </div>
</nav>
    <div class="container unselectable">
        <h1 id="name-title" class="text_effect">🎉<span id="name-letters"></span>🎉</h1>
        
        <div class="info">
            <div class="slideshow-container">
                <div class="slideshow" id="slideshow">
                    <img src="./img/1.jpg" class="active" loading="lazy">
                    <img src="./img/5.jpg" loading="lazy">
                    <img src="./img/3.jpg" loading="lazy">
                    <img src="./img/2.jpg" loading="lazy">
                    <img src="./img/4.jpg" loading="lazy">
                    <img src="./img/6.jpg" loading="lazy">
                </div>
            </div>
            <p id="age"><span class="emoji">👶</span> Возраст ребенка: <span class="highlight"><br>0 лет, 0 месяцев, 0 дней</span><br></p>
            <p id="nextBirthday"><span class="emoji">🎂</span> До следующего дня рождения: <span class="highlight">355 дней</span></p>
            <div class="progressBarContainer">
                <div id="progressBarYear" class="progressBar" style="width: 2.88186%;"></div>
            </div>
            <p id="fiveYears"><span class="emoji">🎈</span> До 5-летия: <span class="highlight"></span></p>
            <div class="progressBarContainer">
                <div id="progressBar5" class="progressBar" style="width: 0.552668%;"></div>
            </div>
            <p id="schoolTime"><span class="emoji">📚</span> До школы: <span class="highlight"></span></p>
            <div class="progressBarContainer">
                <div id="progressBarSchool" class="progressBar" style="width: 0.369989%;"></div>
            </div>
            <p id="tenYears"><span class="emoji">🌟</span> До 10-летия: <span class="highlight"></span></p>
            <div class="progressBarContainer">
                <div id="progressBar10" class="progressBar" style="width: 0.276334%;"></div>
            </div>
            <p id="eighteenYears"><span class="emoji">🎉</span> До 18-летия: <span class="highlight"></span></p>
            <div class="progressBarContainer">
                <div id="progressBar18" class="progressBar" style="width: 0.15351%;"></div>
            </div>
            <p id="retirement"><span class="emoji">👵</span> До пенсии: <span class="highlight"></span></p>
            <div class="progressBarContainer">
                <div id="progressBarRetirement" class="progressBar" style="width: 0.0460493%;"></div>
            </div>
        </div>
        
        <!-- Раздел "Первые дни" -->
        <div class="section-divider">
            <div class="section-title" id="perv">Предыстория</div>
        </div>
        
        <div class="anniversary-row">
            <div class="anniversary-frame" onclick="openModal('./img/photo_2024-07-15_15-59-38.jpg', 'УЗИ 15.07.24')">
                <img data-src="./img/photo_2024-07-15_15-59-38.jpg" alt="УЗИ 15.07.24" class="anniversary-photo" loading="lazy">
                <div class="placeholder">УЗИ 15.07.24</div>
                <div class="anniversary-text">УЗИ 15.07.24</div>
            </div> 
            
            <div class="anniversary-frame" onclick="openModal('./img/minus2.jpg', '28.12.24')">
                <img data-src="./img/ezgif-815fda565eec18.gif" alt="УЗИ" class="anniversary-photo" loading="lazy">
                <div class="placeholder"></div>
                <div class="anniversary-text">28.12.24</div>
            </div> 
            
            <div class="anniversary-frame" onclick="openModal('./img/minus1.jpg', '3D УЗИ')">
                <img data-src="./img/minus1.jpg" alt="УЗИ" class="anniversary-photo" loading="lazy">
                <div class="placeholder"></div>
                <div class="anniversary-text">3D УЗИ</div>
            </div>
        </div>
        
        <!-- Раздел "Глава - 1" -->
        <div class="section-divider">
            <div class="section-title" id="gl1">Глава - 1</div>
        </div>
        
        <div class="anniversary-row">
            <div class="anniversary-frame" onclick="openModal('./img/0day.jpg', 'Первый день(Матрешка)')">
                <img data-src="./img/0day.jpg" alt="Первый день" class="anniversary-photo" loading="lazy">
                <div class="placeholder"></div>
                <div class="anniversary-text">hello world</div>
            </div>
			
            <div class="anniversary-frame" onclick="openModal('./img/1.jpg', '5 дней')">
                <img data-src="./img/1.jpg" alt="5 дней" class="anniversary-photo" loading="lazy">
                <div class="placeholder"></div>
                <div class="anniversary-text">5 дней</div>
            </div>
            
            <div class="anniversary-frame" onclick="openModal('./img/10day.jpg', '10 дней')">
                <img data-src="./img/10day.jpg" alt="10 дней" class="anniversary-photo" loading="lazy">
                <div class="placeholder"></div>
                <div class="anniversary-text">10 дней</div>
            </div>
            
            <div class="anniversary-frame" onclick="openModal('./img/11day.jpg', '11 дней')">
                <img data-src="./img/11day.jpg" alt="11 дней" class="anniversary-photo" loading="lazy">
                <div class="placeholder"></div>
                <div class="anniversary-text">11 дней</div>
            </div>
            
            <div class="anniversary-frame" onclick="openModal('./img/12day.jpg', '12 дней')">
                <img data-src="./img/12day.jpg" alt="12 дней" class="anniversary-photo" loading="lazy">
                <div class="placeholder"></div>
                <div class="anniversary-text">12 дней</div>
            </div>
            
            <div class="anniversary-frame" onclick="openModal('./img/photo_2025-03-26_15-39-24.jpg', 'На работе')">
                <img data-src="./img/photo_2025-03-26_15-39-24.jpg" alt="На работе" class="anniversary-photo" loading="lazy">
                <div class="placeholder"></div>
                <div class="anniversary-text">На работе</div>
            </div>
			
			<div class="anniversary-frame" onclick="openModal('./img/photo_2025-03-27_15-35-02.jpg', '13 дней')">
                <img data-src="./img/photo_2025-03-27_15-35-02.jpg" alt="13 дней" class="anniversary-photo" loading="lazy">
                <div class="placeholder"></div>
                <div class="anniversary-text">13 дней</div>
            </div>
        </div>
    </div>

    <!-- Модальное окно для увеличенного просмотра -->
    <div class="modal-overlay" id="modalOverlay" onclick="closeModal()">
        <div class="modal-content" onclick="event.stopPropagation()">
            <span class="close-modal" onclick="closeModal()">&times;</span>
            <img id="modalImage" src="" alt="">
            <div class="anniversary-text" id="modalText"></div>
        </div>
    </div>

    <!-- Bootstrap JS и зависимости -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    
    <script>
        // Инициализация при загрузке страницы
        document.addEventListener('DOMContentLoaded', function() {
            updateInfo();
            updateEventsInfo();
            animateNameLetters();
            startHeartAnimation();
            initSlideshow();
            lazyLoadImages();
        });

        // Функции для модального окна
        function openModal(imgSrc, text) {
            const modal = document.getElementById('modalOverlay');
            const modalImg = document.getElementById('modalImage');
            const modalText = document.getElementById('modalText');
            
            modalImg.src = imgSrc;
            modalText.textContent = text;
            modal.classList.add('active');
            document.body.style.overflow = 'hidden';
        }
        
        function closeModal() {
            const modal = document.getElementById('modalOverlay');
            modal.classList.remove('active');
            document.body.style.overflow = 'auto';
        }
        
        // Закрытие модального окна при нажатии ESC
        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                closeModal();
            }
        });

        // Функция создания сердечек
        function createHeart() {
            const heart = document.createElement('div');
            heart.innerHTML = '❤️';
            heart.classList.add('heart-bubble');
            
            const colors = ['#ff6699', '#ff3366', '#ff0066', '#ff99cc', '#ff66b3'];
            const randomColor = colors[Math.floor(Math.random() * colors.length)];
            heart.style.color = randomColor;
            
            const x = Math.random() * window.innerWidth;
            heart.style.left = `${x}px`;
            heart.style.bottom = '0';
            
            const size = Math.random() * 20 + 25;
            heart.style.fontSize = `${size}px`;
            
            document.body.appendChild(heart);
            
            setTimeout(() => {
                heart.remove();
            }, 5000);
        }

        // Запускаем создание сердечек
        function startHeartAnimation() {
            createHeart();
            const nextInterval = Math.random() * 350 + 50;
            setTimeout(startHeartAnimation, nextInterval);
        }

        // Анимация букв имени "Валерия"
        function animateNameLetters() {
            const name = "Валерия";
            const nameLettersContainer = document.getElementById('name-letters');
            
            name.split('').forEach((letter, index) => {
                const span = document.createElement('span');
                span.className = 'letter';
                span.textContent = letter;
                span.style.animation = `snake 2s ${index * 0.2}s infinite ease-in-out`;
                nameLettersContainer.appendChild(span);
            });
        }

        // Слайд-шоу
        function initSlideshow() {
            const slideshow = document.getElementById('slideshow');
            let currentIndex = 0;

            function showNextImage() {
                const currentImage = slideshow.querySelector('.active');
                if (currentImage) {
                    currentImage.classList.remove('active');
                }

                currentIndex = (currentIndex + 1) % slideshow.children.length;
                const nextImage = slideshow.children[currentIndex];
                nextImage.classList.add('active');
            }

            setInterval(showNextImage, 3000);
        }

        // Ленивая загрузка изображений
        function lazyLoadImages() {
            const lazyImages = [].slice.call(document.querySelectorAll('img[loading="lazy"], img[data-src]'));
            
            if ('IntersectionObserver' in window) {
                const lazyImageObserver = new IntersectionObserver(function(entries, observer) {
                    entries.forEach(function(entry) {
                        if (entry.isIntersecting) {
                            const lazyImage = entry.target;
                            
                            // Загружаем изображение
                            if (lazyImage.dataset.src) {
                                lazyImage.src = lazyImage.dataset.src;
                                delete lazyImage.dataset.src;
                            }
                            
                            // Удаляем placeholder
                            const placeholder = lazyImage.nextElementSibling;
                            if (placeholder && placeholder.classList.contains('placeholder')) {
                                placeholder.remove();
                            }
                            
                            // Добавляем класс loaded для плавного появления
                            lazyImage.onload = function() {
                                lazyImage.classList.add('loaded');
                            };
                            
                            lazyImageObserver.unobserve(lazyImage);
                        }
                    });
                }, {
                    rootMargin: '200px 0px'
                });

                lazyImages.forEach(function(lazyImage) {
                    lazyImageObserver.observe(lazyImage);
                });
            } else {
                // Fallback для браузеров без поддержки IntersectionObserver
                lazyImages.forEach(function(lazyImage) {
                    if (lazyImage.dataset.src) {
                        lazyImage.src = lazyImage.dataset.src;
                        lazyImage.onload = function() {
                            lazyImage.classList.add('loaded');
                        };
                    }
                });
            }
        }
		
		// Закрытие меню при клике на пункт (для мобильных)
document.querySelectorAll('.nav-link').forEach(link => {
    link.addEventListener('click', () => {
        const navbar = document.getElementById('navbarText');
        if (navbar.classList.contains('show')) {
            $('.navbar-toggler').click(); // Закрываем меню
        }
    });
});

        // Расчет возраста и прогресс-баров
        const birthDate = new Date('2025-03-14T10:15:00');

        function calculateAge(birthDate) {
            const now = new Date();
            let years = now.getFullYear() - birthDate.getFullYear();
            let months = now.getMonth() - birthDate.getMonth();
            let days = now.getDate() - birthDate.getDate();
            let hours = now.getHours() - birthDate.getHours();
            let minutes = now.getMinutes() - birthDate.getMinutes();
            let seconds = now.getSeconds() - birthDate.getSeconds();
            
            if (seconds < 0) {
                minutes--;
                seconds += 60;
            }
            if (minutes < 0) {
                hours--;
                minutes += 60;
            }
            if (hours < 0) {
                days--;
                hours += 24;
            }
            if (days < 0) {
                months--;
                days += new Date(now.getFullYear(), now.getMonth(), 0).getDate();
            }
            if (months < 0) {
                years--;
                months += 12;
            }
            
            return { years, months, days, hours, minutes, seconds };
        }

        // Расчет дней до дня рождения (исправленная версия)
        function getDaysUntilBirthday(birthday) {
            const today = new Date();
            today.setHours(0, 0, 0, 0); // Устанавливаем время на начало дня
            
            // Получаем день рождения в текущем году
            let nextBirthday = new Date(today.getFullYear(), birthday.getMonth(), birthday.getDate());
            
            // Если день рождения в этом году уже прошел, берем следующий год
            if (today > nextBirthday) {
                nextBirthday = new Date(today.getFullYear() + 1, birthday.getMonth(), birthday.getDate());
            }
            
            // Разница в миллисекундах
            const diffTime = nextBirthday - today;
            
            // Переводим в дни (округляем вверх)
            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
            
            return diffDays;
        }

        // Расчет дней до различных событий
        function calculateDaysToEvents(birthDate) {
            const now = new Date();
            const currentYear = now.getFullYear();
            
            // Используем новую функцию для дня рождения
            const daysToBirthday = getDaysUntilBirthday(birthDate);
            
            // До 5 лет
            const fiveYearsDate = new Date(birthDate.getFullYear() + 5, birthDate.getMonth(), birthDate.getDate());
            const daysTo5Years = Math.floor((fiveYearsDate - now) / (1000 * 60 * 60 * 24));
            
            // До школы (7 лет)
            const schoolDate = new Date(birthDate.getFullYear() + 7, 8, 1); // 1 сентября через 7 лет
            const daysToSchool = Math.floor((schoolDate - now) / (1000 * 60 * 60 * 24));
            
            // До 10 лет
            const tenYearsDate = new Date(birthDate.getFullYear() + 10, birthDate.getMonth(), birthDate.getDate());
            const daysTo10Years = Math.floor((tenYearsDate - now) / (1000 * 60 * 60 * 24));
            
            // До 18 лет
            const eighteenYearsDate = new Date(birthDate.getFullYear() + 18, birthDate.getMonth(), birthDate.getDate());
            const daysTo18Years = Math.floor((eighteenYearsDate - now) / (1000 * 60 * 60 * 24));
            
            // До пенсии (женщины - 60 лет)
            const retirementDate = new Date(birthDate.getFullYear() + 60, birthDate.getMonth(), birthDate.getDate());
            const daysToRetirement = Math.floor((retirementDate - now) / (1000 * 60 * 60 * 24));
            
            return {
                daysToBirthday,
                daysTo5Years,
                daysToSchool,
                daysTo10Years,
                daysTo18Years,
                daysToRetirement
            };
        }

        // Обновление прогресс-бара с учетом наступивших событий
        function updateProgressBar(barId, daysRemaining, totalDays, eventName) {
            const progressBar = document.getElementById(barId);
            const container = progressBar.parentElement;
            const textElement = container.previousElementSibling;
            
            // Если событие уже прошло (дни отрицательные)
            if (daysRemaining <= 0) {
                // Устанавливаем соответствующий текст для каждого события
                switch(barId) {
                    case 'progressBarSchool':
                        textElement.innerHTML = `<span class="emoji">📚</span> Школа: <span class="highlight">Уже в школе!</span>`;
                        break;
                    case 'progressBar5':
                        textElement.innerHTML = `<span class="emoji">🎈</span> 5 лет: <span class="highlight">Уже исполнилось!</span>`;
                        break;
                    case 'progressBar10':
                        textElement.innerHTML = `<span class="emoji">🌟</span> 10 лет: <span class="highlight">Уже есть!</span>`;
                        break;
                    case 'progressBar18':
                        textElement.innerHTML = `<span class="emoji">🎉</span> 18 лет: <span class="highlight">Уже взрослый!</span>`;
                        break;
                    case 'progressBarRetirement':
                        textElement.innerHTML = `<span class="emoji">👵</span> Пенсия: <span class="highlight">Поздравляю, бабушка!</span>`;
                        break;
                    case 'progressBarYear':
                        textElement.innerHTML = `<span class="emoji">🎂</span> День рождения: <span class="highlight">Сегодня!</span>`;
                        break;
                    default:
                        textElement.innerHTML = textElement.innerHTML.replace("До", "Уже");
                }
                
                // Устанавливаем полный прогресс и зеленый цвет
                progressBar.style.width = '100%';
                container.classList.add('complete');
            } else {
                // Рассчитываем процент выполнения
                const percentage = 100 - (daysRemaining / totalDays * 100);
                progressBar.style.width = `${percentage}%`;
                container.classList.remove('complete');
                
                // Восстанавливаем оригинальный текст если событие еще не наступило
                switch(barId) {
                    case 'progressBarSchool':
                        textElement.innerHTML = `<span class="emoji">📚</span> До школы: <span class="highlight">${daysRemaining} дней</span>`;
                        break;
                    case 'progressBar5':
                        textElement.innerHTML = `<span class="emoji">🎈</span> До 5-летия: <span class="highlight">${daysRemaining} дней</span>`;
                        break;
                    case 'progressBar10':
                        textElement.innerHTML = `<span class="emoji">🌟</span> До 10-летия: <span class="highlight">${daysRemaining} дней</span>`;
                        break;
                    case 'progressBar18':
                        textElement.innerHTML = `<span class="emoji">🎉</span> До 18-летия: <span class="highlight">${daysRemaining} дней</span>`;
                        break;
                    case 'progressBarRetirement':
                        textElement.innerHTML = `<span class="emoji">👵</span> До пенсии: <span class="highlight">${daysRemaining} дней</span>`;
                        break;
                    case 'progressBarYear':
                        textElement.innerHTML = `<span class="emoji">🎂</span> До дня рождения: <span class="highlight">${daysRemaining} дней</span>`;
                        break;
                }
            }
        }

        // Обновление информации о днях до событий
        function updateEventsInfo() {
            const events = calculateDaysToEvents(birthDate);
            
            // До следующего дня рождения
            updateProgressBar('progressBarYear', events.daysToBirthday, 365, 'До дня рождения');
            
            // До 5 лет
            updateProgressBar('progressBar5', events.daysTo5Years, 5 * 365, 'До 5-летия');
            
            // До школы
            updateProgressBar('progressBarSchool', events.daysToSchool, 7 * 365, 'До школы');
            
            // До 10 лет
            updateProgressBar('progressBar10', events.daysTo10Years, 10 * 365, 'До 10-летия');
            
            // До 18 лет
            updateProgressBar('progressBar18', events.daysTo18Years, 18 * 365, 'До 18-летия');
            
            // До пенсии (60 лет для женщин)
            updateProgressBar('progressBarRetirement', events.daysToRetirement, 60 * 365, 'До пенсии');
            
            // Обновляем каждую минуту
            setTimeout(updateEventsInfo, 60000);
        }

        function updateInfo() {
            const age = calculateAge(birthDate);
            document.getElementById('age').innerHTML = `<span class="emoji">👶</span> Возраст ребенка: <span class="highlight"><br>${age.years} лет, ${age.months} месяцев, ${age.days} дней</span><br>${age.hours} часов, ${age.minutes} минут, ${age.seconds} сек`;
            
            // Обновляем каждую секунду
            setTimeout(updateInfo, 1000);
        }
    </script>
</body>
</html>